// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class VerificationCreated extends ethereum.Event {
  get params(): VerificationCreated__Params {
    return new VerificationCreated__Params(this);
  }
}

export class VerificationCreated__Params {
  _event: VerificationCreated;

  constructor(event: VerificationCreated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get skillId(): string {
    return this._event.parameters[1].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PhemeProtocol extends ethereum.SmartContract {
  static bind(address: Address): PhemeProtocol {
    return new PhemeProtocol("PhemeProtocol", address);
  }

  MAX_SKILL_ID_LENGTH(): BigInt {
    let result = super.call(
      "MAX_SKILL_ID_LENGTH",
      "MAX_SKILL_ID_LENGTH():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MAX_SKILL_ID_LENGTH(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_SKILL_ID_LENGTH",
      "MAX_SKILL_ID_LENGTH():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class CreateVerificationCall extends ethereum.Call {
  get inputs(): CreateVerificationCall__Inputs {
    return new CreateVerificationCall__Inputs(this);
  }

  get outputs(): CreateVerificationCall__Outputs {
    return new CreateVerificationCall__Outputs(this);
  }
}

export class CreateVerificationCall__Inputs {
  _call: CreateVerificationCall;

  constructor(call: CreateVerificationCall) {
    this._call = call;
  }

  get skillId(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class CreateVerificationCall__Outputs {
  _call: CreateVerificationCall;

  constructor(call: CreateVerificationCall) {
    this._call = call;
  }
}
